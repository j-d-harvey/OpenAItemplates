{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "8162514128453633769"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "openAiAccountName": {
      "type": "string",
      "defaultValue": "oai-private-demo",
      "metadata": {
        "description": "Name of the Azure OpenAI account"
      }
    },
    "oaiCustomSubDomainName": {
      "type": "string",
      "defaultValue": "[format('oai-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Custom subdomain name for the Azure OpenAI account"
      }
    },
    "oaiSku": {
      "type": "string",
      "defaultValue": "S0",
      "metadata": {
        "description": "SKU for the Azure OpenAI account"
      }
    },
    "oaiPrimaryKeySecretName": {
      "type": "string",
      "defaultValue": "OpenAIPrimaryKey",
      "metadata": {
        "description": "Name of the Azure OpenAI Primary Key Secret for the Key Vault"
      }
    },
    "embeddingsDeploymentCapacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Tokens per Minute Rate Limit (thousands)"
      }
    },
    "embeddingsModelName": {
      "type": "string",
      "defaultValue": "text-embedding-ada-002",
      "metadata": {
        "description": "Name of the Embeddings Model to deploy"
      }
    },
    "gptDeploymentCapacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Tokens per Minute Rate Limit (thousands)"
      }
    },
    "chatGptModelName": {
      "type": "string",
      "defaultValue": "gpt-35-turbo",
      "metadata": {
        "description": "Name of the GPT Model to deploy"
      }
    },
    "apimSku": {
      "type": "string",
      "defaultValue": "Developer",
      "allowedValues": [
        "Developer",
        "Premium"
      ],
      "metadata": {
        "description": "The pricing tier of the API Management service"
      }
    },
    "apimCapacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of instances of the API Management service to deploy"
      }
    },
    "apimName": {
      "type": "string",
      "defaultValue": "[format('apim-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the API Management service"
      }
    },
    "apimPublisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the API Management service"
      }
    },
    "apimPublisherName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the API Management service"
      }
    },
    "apimVNetMode": {
      "type": "string",
      "defaultValue": "Internal",
      "allowedValues": [
        "Internal",
        "External"
      ],
      "metadata": {
        "description": "The pricing tier of the API Management service"
      }
    },
    "apimPrivateDnsZoneName": {
      "type": "string",
      "defaultValue": "azure-api.net",
      "metadata": {
        "description": "Name of the API Management Private DNS Zone"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vnet-oai-demo",
      "metadata": {
        "description": "Name of the Azure Virtual Network"
      }
    },
    "oaiPrivateDnsZoneName": {
      "type": "string",
      "defaultValue": "privatelink.openai.azure.com",
      "metadata": {
        "description": "Name of the Azure OpenaAI Private DNS Zone"
      }
    },
    "oaiPrivateEndpointName": {
      "type": "string",
      "defaultValue": "oaiDemoPrivateEndpoint",
      "metadata": {
        "description": "Name of the Azure OpenaAI Private Endpoint"
      }
    },
    "bastionHostName": {
      "type": "string",
      "defaultValue": "bastion-oai-demo",
      "metadata": {
        "description": "The name of the Azure Bastion host"
      }
    },
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin Username for the Virtual Machine."
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Admin Password for the Virtual Machine."
      }
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "win11-22h2-ent",
      "allowedValues": [
        "win11-22h2-pro",
        "win11-22h2-pron",
        "win11-22h2-pro-zh-cn",
        "win11-22h2-ent"
      ],
      "metadata": {
        "description": "The Windows version for the VM"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v5",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "vm-oai-demo",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[format('kv-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the key vault."
      }
    },
    "kvPrivateDnsZoneName": {
      "type": "string",
      "defaultValue": "privatelink.vaultcore.azure.net",
      "metadata": {
        "description": "Name of the Key Vault Private DNS Zone"
      }
    },
    "kvPrivateEndpointName": {
      "type": "string",
      "defaultValue": "kvPrivateEndpoint",
      "metadata": {
        "description": "Name of the Key Vault Private Endpoint"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Azure Active Directory tenant ID that should be used for authenticating requests to the key vault"
      }
    },
    "keyVaultSku": {
      "type": "string",
      "defaultValue": "standard",
      "metadata": {
        "description": "SKU of the key vault."
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('la-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Log Analytics account"
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "appi-oai-demo",
      "metadata": {
        "description": "Name of the Log Analytics account"
      }
    }
  },
  "variables": {
    "keyVaultRoleDefinitionId": "4633458b-17de-408a-b874-0445c86b69e6",
    "embeddingsDeployment": "[if(empty(parameters('embeddingsModelName')), 'ada', parameters('embeddingsModelName'))]",
    "chatGptDeployment": "[if(empty(parameters('chatGptModelName')), 'chat', parameters('chatGptModelName'))]",
    "deployments": [
      {
        "name": "[variables('embeddingsDeployment')]",
        "model": {
          "format": "OpenAI",
          "name": "[parameters('embeddingsModelName')]"
        },
        "sku": {
          "name": "Standard",
          "capacity": "[parameters('embeddingsDeploymentCapacity')]"
        }
      },
      {
        "name": "[variables('chatGptDeployment')]",
        "model": {
          "format": "OpenAI",
          "name": "[parameters('chatGptModelName')]"
        },
        "sku": {
          "name": "Standard",
          "capacity": "[parameters('gptDeploymentCapacity')]"
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "virtualNetwork",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "bastionHostName": {
            "value": "[parameters('bastionHostName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "361951676853445536"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string"
            },
            "bastionHostName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-07-01",
              "name": "nsg-basic-oai-demo",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-07-01",
              "name": "[format('nsg-{0}', parameters('bastionHostName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowHttpsInBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "Internet",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowGatewayManagerInBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowLoadBalancerInBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowBastionHostCommunicationInBound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "DenyAllInBound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Deny",
                      "priority": 1000,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowSshRdpOutBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRanges": [
                        "22",
                        "3389"
                      ],
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowAzureCloudCommunicationOutBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "AzureCloud",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowBastionHostCommunicationOutBound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowGetSessionInformationOutBound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "Internet",
                      "destinationPortRanges": [
                        "80",
                        "443"
                      ],
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Outbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-07-01",
              "name": "nsg-apim-oai-demo",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowManagementEndpointInBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "ApiManagement",
                      "destinationPortRange": "3443",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/24"
                  ]
                },
                "subnets": [
                  {
                    "name": "OpenAI",
                    "properties": {
                      "addressPrefix": "10.0.0.0/27",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-basic-oai-demo')]"
                      },
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                  },
                  {
                    "name": "VirtualMachines",
                    "properties": {
                      "addressPrefix": "10.0.0.32/28",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-basic-oai-demo')]"
                      }
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                  },
                  {
                    "name": "APIM",
                    "properties": {
                      "addressPrefix": "10.0.0.64/27",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-apim-oai-demo')]"
                      }
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                  },
                  {
                    "name": "PrivateEndpoints",
                    "properties": {
                      "addressPrefix": "10.0.0.128/27",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-basic-oai-demo')]"
                      },
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                  },
                  {
                    "name": "AzureBastionSubnet",
                    "properties": {
                      "addressPrefix": "10.0.0.192/26",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}', parameters('bastionHostName')))]"
                      },
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    },
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                  }
                ],
                "virtualNetworkPeerings": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-apim-oai-demo')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-basic-oai-demo')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}', parameters('bastionHostName')))]"
              ]
            }
          ],
          "outputs": {
            "virtualNetworkId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            },
            "bastionSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('virtualNetworkName'), 'AzureBastionSubnet')]"
            },
            "virtualMachinesSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('virtualNetworkName'), 'VirtualMachines')]"
            },
            "apimSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('virtualNetworkName'), 'APIM')]"
            },
            "privateEndpointsSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('virtualNetworkName'), 'PrivateEndpoints')]"
            },
            "basicNSGId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-basic-oai-demo')]"
            },
            "apimNSGId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-apim-oai-demo')]"
            },
            "bastionNSGId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}', parameters('bastionHostName')))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "kvPrivateDnsZoneName": {
            "value": "[parameters('kvPrivateDnsZoneName')]"
          },
          "kvPrivateEndpointName": {
            "value": "[parameters('kvPrivateEndpointName')]"
          },
          "tenantId": {
            "value": "[parameters('tenantId')]"
          },
          "keyVaultSku": {
            "value": "[parameters('keyVaultSku')]"
          },
          "keyVaultRoleDefinitionId": {
            "value": "[variables('keyVaultRoleDefinitionId')]"
          },
          "apimName": {
            "value": "[parameters('apimName')]"
          },
          "virtualNetworkId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.virtualNetworkId.value]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.privateEndpointsSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "5737947184665944760"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "keyVaultSku": {
              "type": "string"
            },
            "apimName": {
              "type": "string"
            },
            "keyVaultRoleDefinitionId": {
              "type": "string"
            },
            "kvPrivateEndpointName": {
              "type": "string"
            },
            "virtualNetworkId": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "kvPrivateDnsZoneName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-11-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[parameters('tenantId')]",
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "sku": {
                  "name": "[parameters('keyVaultSku')]",
                  "family": "A"
                },
                "networkAcls": {
                  "defaultAction": "Deny",
                  "bypass": "AzureServices"
                }
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('mi-{0}', parameters('apimName'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[guid(parameters('keyVaultRoleDefinitionId'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', parameters('apimName'))), resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', parameters('apimName'))), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', parameters('apimName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-11-01",
              "name": "[parameters('kvPrivateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('kvPrivateEndpointName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                      "groupIds": [
                        "vault"
                      ],
                      "privateLinkServiceConnectionState": {
                        "status": "Approved",
                        "description": "Approved",
                        "actionsRequired": "None"
                      }
                    }
                  }
                ],
                "customNetworkInterfaceName": "[format('{0}-nic', parameters('kvPrivateEndpointName'))]",
                "subnet": {
                  "id": "[parameters('subnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('kvPrivateDnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('kvPrivateDnsZoneName'), format('{0}-link', parameters('kvPrivateDnsZoneName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('kvPrivateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', parameters('kvPrivateEndpointName'), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config1",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('kvPrivateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('kvPrivateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('kvPrivateEndpointName'))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            },
            "keyVaultUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2021-11-01-preview').vaultUri]"
            },
            "managedIdentityId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', parameters('apimName')))]"
            },
            "managedIdentityClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', parameters('apimName'))), '2018-11-30').clientId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "loggingResources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "applicationInsightsName": {
            "value": "[parameters('applicationInsightsName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "488378747488787886"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            }
          ],
          "outputs": {
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            },
            "applicationInsightsId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyVault')]",
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "oaiAccount",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "openAiAccountName": {
            "value": "[parameters('openAiAccountName')]"
          },
          "oaiCustomSubDomainName": {
            "value": "[parameters('oaiCustomSubDomainName')]"
          },
          "oaiSku": {
            "value": "[parameters('oaiSku')]"
          },
          "deployments": {
            "value": "[variables('deployments')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loggingResources'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          },
          "oaiPrivateDnsZoneName": {
            "value": "[parameters('oaiPrivateDnsZoneName')]"
          },
          "oaiPrivateEndpointName": {
            "value": "[parameters('oaiPrivateEndpointName')]"
          },
          "virtualNetworkId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.virtualNetworkId.value]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "oaiPrimaryKeySecretName": {
            "value": "[parameters('oaiPrimaryKeySecretName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "15655091324839573962"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "openAiAccountName": {
              "type": "string"
            },
            "oaiCustomSubDomainName": {
              "type": "string"
            },
            "oaiSku": {
              "type": "string"
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "virtualNetworkId": {
              "type": "string"
            },
            "oaiPrivateDnsZoneName": {
              "type": "string"
            },
            "oaiPrivateEndpointName": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "oaiPrimaryKeySecretName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('oaiPrimaryKeySecretName'))]",
              "properties": {
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiAccountName')), '2023-05-01').key1]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('openAiAccountName')]",
              "location": "[parameters('location')]",
              "kind": "OpenAI",
              "properties": {
                "customSubDomainName": "[parameters('oaiCustomSubDomainName')]",
                "publicNetworkAccess": "Disabled"
              },
              "sku": {
                "name": "[parameters('oaiSku')]"
              }
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('openAiAccountName'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 20))]",
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.openai.azure.com",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'privatelink.openai.azure.com', format('{0}-link', parameters('oaiPrivateDnsZoneName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.openai.azure.com')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-11-01",
              "name": "[parameters('oaiPrivateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('oaiPrivateEndpointName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiAccountName'))]",
                      "groupIds": [
                        "account"
                      ],
                      "privateLinkServiceConnectionState": {
                        "status": "Approved",
                        "description": "Approved",
                        "actionsRequired": "None"
                      }
                    }
                  }
                ],
                "customNetworkInterfaceName": "[format('{0}-nic', parameters('oaiPrivateEndpointName'))]",
                "subnet": {
                  "id": "[format('{0}/subnets/OpenAI', parameters('virtualNetworkId'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', parameters('oaiPrivateEndpointName'), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config1",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.openai.azure.com')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.openai.azure.com')]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('oaiPrivateEndpointName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('openAiAccountName'))]",
              "name": "[format('{0}-diags', parameters('openAiAccountName'))]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "oaiAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiAccountName'))]"
            },
            "openAiEndpoint": {
              "type": "string",
              "value": "[format('{0}/openai', reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiAccountName')), '2023-05-01').endpoint)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'loggingResources')]",
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "apiManagement",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "apimName": {
            "value": "[parameters('apimName')]"
          },
          "apimSku": {
            "value": "[parameters('apimSku')]"
          },
          "apimCapacity": {
            "value": "[parameters('apimCapacity')]"
          },
          "apimPublisherEmail": {
            "value": "[parameters('apimPublisherEmail')]"
          },
          "apimPublisherName": {
            "value": "[parameters('apimPublisherName')]"
          },
          "openAiEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'oaiAccount'), '2022-09-01').outputs.openAiEndpoint.value]"
          },
          "apimPrivateDnsZoneName": {
            "value": "[parameters('apimPrivateDnsZoneName')]"
          },
          "applicationInsightsName": {
            "value": "[parameters('applicationInsightsName')]"
          },
          "applicationInsightsId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loggingResources'), '2022-09-01').outputs.applicationInsightsId.value]"
          },
          "managedIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.managedIdentityId.value]"
          },
          "managedIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.managedIdentityClientId.value]"
          },
          "keyVaultUri": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.keyVaultUri.value]"
          },
          "openaiKeyVaultSecretName": {
            "value": "[parameters('oaiPrimaryKeySecretName')]"
          },
          "apimVNetMode": {
            "value": "[parameters('apimVNetMode')]"
          },
          "virtualNetworkId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.virtualNetworkId.value]"
          },
          "apimSubentResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.apimSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "10764581264356819478"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "apimName": {
              "type": "string"
            },
            "apimSku": {
              "type": "string"
            },
            "apimCapacity": {
              "type": "int"
            },
            "apimPublisherEmail": {
              "type": "string"
            },
            "apimPublisherName": {
              "type": "string"
            },
            "openAiEndpoint": {
              "type": "string"
            },
            "apimPrivateDnsZoneName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "applicationInsightsId": {
              "type": "string"
            },
            "managedIdentityId": {
              "type": "string"
            },
            "managedIdentityClientId": {
              "type": "string"
            },
            "keyVaultUri": {
              "type": "string"
            },
            "openaiKeyVaultSecretName": {
              "type": "string"
            },
            "apimVNetMode": {
              "type": "string"
            },
            "virtualNetworkId": {
              "type": "string"
            },
            "apimSubentResourceId": {
              "type": "string"
            }
          },
          "variables": {
            "$fxv#0": {
              "openapi": "3.0.0",
              "info": {
                "title": "Azure OpenAI Service API",
                "description": "Azure OpenAI APIs for completions and search",
                "version": "2023-05-15"
              },
              "servers": [
                {
                  "url": "https://{endpoint}/openai",
                  "variables": {
                    "endpoint": {
                      "default": "your-resource-name.openai.azure.com"
                    }
                  }
                }
              ],
              "security": [
                {
                  "bearer": [
                    "api.read"
                  ]
                },
                {
                  "apiKey": []
                }
              ],
              "paths": {
                "/deployments/{deployment-id}/completions": {
                  "post": {
                    "summary": "Creates a completion for the provided prompt, parameters and chosen model.",
                    "operationId": "Completions_Create",
                    "parameters": [
                      {
                        "in": "path",
                        "name": "deployment-id",
                        "required": true,
                        "schema": {
                          "type": "string",
                          "example": "davinci",
                          "description": "Deployment id of the model which was deployed."
                        }
                      },
                      {
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                          "type": "string",
                          "example": "2023-05-15",
                          "description": "api version"
                        }
                      }
                    ],
                    "requestBody": {
                      "required": true,
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "prompt": {
                                "description": "The prompt(s) to generate completions for, encoded as a string or array of strings.\nNote that <|endoftext|> is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document. Maximum allowed size of string list is 2048.",
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "default": "",
                                    "example": "This is a test.",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "default": "",
                                      "example": "This is a test.",
                                      "nullable": false
                                    },
                                    "description": "Array size minimum of 1 and maximum of 2048"
                                  }
                                ]
                              },
                              "max_tokens": {
                                "description": "The token count of your prompt plus max_tokens cannot exceed the model's context length. Most models have a context length of 2048 tokens (except for the newest models, which support 4096). Has minimum of 0.",
                                "type": "integer",
                                "default": 16,
                                "example": 16,
                                "nullable": true
                              },
                              "temperature": {
                                "description": "What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.\nWe generally recommend altering this or top_p but not both.",
                                "type": "number",
                                "default": 1,
                                "example": 1,
                                "nullable": true
                              },
                              "top_p": {
                                "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\nWe generally recommend altering this or temperature but not both.",
                                "type": "number",
                                "default": 1,
                                "example": 1,
                                "nullable": true
                              },
                              "logit_bias": {
                                "description": "Defaults to null. Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. As an example, you can pass {\"50256\" &#58; -100} to prevent the <|endoftext|> token from being generated.",
                                "type": "object",
                                "nullable": false
                              },
                              "user": {
                                "description": "A unique identifier representing your end-user, which can help monitoring and detecting abuse",
                                "type": "string",
                                "nullable": false
                              },
                              "n": {
                                "description": "How many completions to generate for each prompt. Minimum of 1 and maximum of 128 allowed.\nNote: Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for max_tokens and stop.",
                                "type": "integer",
                                "default": 1,
                                "example": 1,
                                "nullable": true
                              },
                              "stream": {
                                "description": "Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message.",
                                "type": "boolean",
                                "nullable": true,
                                "default": false
                              },
                              "logprobs": {
                                "description": "Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. For example, if logprobs is 5, the API will return a list of the 5 most likely tokens. The API will always return the logprob of the sampled token, so there may be up to logprobs+1 elements in the response.\nMinimum of 0 and maximum of 5 allowed.",
                                "type": "integer",
                                "default": null,
                                "nullable": true
                              },
                              "model": {
                                "type": "string",
                                "example": "davinci",
                                "nullable": true,
                                "description": "ID of the model to use. You can use the Models_List operation to see all of your available models, or see our Models_Get overview for descriptions of them."
                              },
                              "suffix": {
                                "type": "string",
                                "nullable": true,
                                "description": "The suffix that comes after a completion of inserted text."
                              },
                              "echo": {
                                "description": "Echo back the prompt in addition to the completion",
                                "type": "boolean",
                                "default": false,
                                "nullable": true
                              },
                              "stop": {
                                "description": "Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.",
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "default": "<|endoftext|>",
                                    "example": "\n",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "\n"
                                      ],
                                      "nullable": false
                                    },
                                    "description": "Array minimum size of 1 and maximum of 4"
                                  }
                                ]
                              },
                              "completion_config": {
                                "type": "string",
                                "nullable": true
                              },
                              "cache_level": {
                                "description": "can be used to disable any server-side caching, 0=no cache, 1=prompt prefix enabled, 2=full cache",
                                "type": "integer",
                                "nullable": true
                              },
                              "presence_penalty": {
                                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
                                "type": "number",
                                "default": 0
                              },
                              "frequency_penalty": {
                                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
                                "type": "number",
                                "default": 0
                              },
                              "best_of": {
                                "description": "Generates best_of completions server-side and returns the \"best\" (the one with the highest log probability per token). Results cannot be streamed.\nWhen used with n, best_of controls the number of candidate completions and n specifies how many to return – best_of must be greater than n.\nNote: Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for max_tokens and stop. Has maximum value of 128.",
                                "type": "integer"
                              }
                            }
                          },
                          "example": {
                            "prompt": "Negate the following sentence.The price for bubblegum increased on thursday.\n\n Negated Sentence:",
                            "max_tokens": 50
                          }
                        }
                      }
                    },
                    "responses": {
                      "200": {
                        "description": "OK",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "object": {
                                  "type": "string"
                                },
                                "created": {
                                  "type": "integer"
                                },
                                "model": {
                                  "type": "string"
                                },
                                "choices": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "text": {
                                        "type": "string"
                                      },
                                      "index": {
                                        "type": "integer"
                                      },
                                      "logprobs": {
                                        "type": "object",
                                        "properties": {
                                          "tokens": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "token_logprobs": {
                                            "type": "array",
                                            "items": {
                                              "type": "number"
                                            }
                                          },
                                          "top_logprobs": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "number"
                                              }
                                            }
                                          },
                                          "text_offset": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "finish_reason": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "usage": {
                                  "type": "object",
                                  "properties": {
                                    "completion_tokens": {
                                      "type": "number",
                                      "format": "int32"
                                    },
                                    "prompt_tokens": {
                                      "type": "number",
                                      "format": "int32"
                                    },
                                    "total_tokens": {
                                      "type": "number",
                                      "format": "int32"
                                    }
                                  },
                                  "required": [
                                    "prompt_tokens",
                                    "total_tokens",
                                    "completion_tokens"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "created",
                                "model",
                                "choices"
                              ]
                            },
                            "example": {
                              "model": "davinci",
                              "object": "text_completion",
                              "id": "cmpl-4509KAos68kxOqpE2uYGw81j6m7uo",
                              "created": 1637097562,
                              "choices": [
                                {
                                  "index": 0,
                                  "text": "The price for bubblegum decreased on thursday.",
                                  "logprobs": null,
                                  "finish_reason": "stop"
                                }
                              ]
                            }
                          }
                        },
                        "headers": {
                          "apim-request-id": {
                            "description": "Request ID for troubleshooting purposes",
                            "schema": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "default": {
                        "description": "Service unavailable",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/errorResponse"
                            }
                          }
                        },
                        "headers": {
                          "apim-request-id": {
                            "description": "Request ID for troubleshooting purposes",
                            "schema": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "/deployments/{deployment-id}/embeddings": {
                  "post": {
                    "summary": "Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.",
                    "operationId": "embeddings_create",
                    "parameters": [
                      {
                        "in": "path",
                        "name": "deployment-id",
                        "required": true,
                        "schema": {
                          "type": "string",
                          "example": "ada-search-index-v1"
                        },
                        "description": "The deployment id of the model which was deployed."
                      },
                      {
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                          "type": "string",
                          "example": "2023-05-15",
                          "description": "api version"
                        }
                      }
                    ],
                    "requestBody": {
                      "required": true,
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "additionalProperties": true,
                            "properties": {
                              "input": {
                                "description": "Input text to get embeddings for, encoded as a string. To get embeddings for multiple inputs in a single request, pass an array of strings. Each input must not exceed 2048 tokens in length.\nUnless you are embedding code, we suggest replacing newlines (\\n) in your input with a single space, as we have observed inferior results when newlines are present.",
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "default": "",
                                    "example": "This is a test.",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "minItems": 1,
                                    "maxItems": 2048,
                                    "items": {
                                      "type": "string",
                                      "minLength": 1,
                                      "example": "This is a test.",
                                      "nullable": false
                                    }
                                  }
                                ]
                              },
                              "user": {
                                "description": "A unique identifier representing your end-user, which can help monitoring and detecting abuse.",
                                "type": "string",
                                "nullable": false
                              },
                              "input_type": {
                                "description": "input type of embedding search to use",
                                "type": "string",
                                "example": "query"
                              },
                              "model": {
                                "type": "string",
                                "description": "ID of the model to use. You can use the Models_List operation to see all of your available models, or see our Models_Get overview for descriptions of them.",
                                "nullable": false
                              }
                            },
                            "required": [
                              "input"
                            ]
                          }
                        }
                      }
                    },
                    "responses": {
                      "200": {
                        "description": "OK",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "object": {
                                  "type": "string"
                                },
                                "model": {
                                  "type": "string"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "index": {
                                        "type": "integer"
                                      },
                                      "object": {
                                        "type": "string"
                                      },
                                      "embedding": {
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        }
                                      }
                                    },
                                    "required": [
                                      "index",
                                      "object",
                                      "embedding"
                                    ]
                                  }
                                },
                                "usage": {
                                  "type": "object",
                                  "properties": {
                                    "prompt_tokens": {
                                      "type": "integer"
                                    },
                                    "total_tokens": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "prompt_tokens",
                                    "total_tokens"
                                  ]
                                }
                              },
                              "required": [
                                "object",
                                "model",
                                "data",
                                "usage"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "/deployments/{deployment-id}/chat/completions": {
                  "post": {
                    "summary": "Creates a completion for the chat message",
                    "operationId": "ChatCompletions_Create",
                    "parameters": [
                      {
                        "in": "path",
                        "name": "deployment-id",
                        "required": true,
                        "schema": {
                          "type": "string",
                          "description": "Deployment id of the model which was deployed."
                        }
                      },
                      {
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                          "type": "string",
                          "example": "2023-05-15",
                          "description": "api version"
                        }
                      }
                    ],
                    "requestBody": {
                      "required": true,
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "messages": {
                                "description": "The messages to generate chat completions for, in the chat format.",
                                "type": "array",
                                "minItems": 1,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "system",
                                        "user",
                                        "assistant"
                                      ],
                                      "description": "The role of the author of this message."
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "The contents of the message"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the user in a multi-user chat"
                                    }
                                  },
                                  "required": [
                                    "role",
                                    "content"
                                  ]
                                }
                              },
                              "temperature": {
                                "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\nWe generally recommend altering this or `top_p` but not both.",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 2,
                                "default": 1,
                                "example": 1,
                                "nullable": true
                              },
                              "top_p": {
                                "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\nWe generally recommend altering this or `temperature` but not both.",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "default": 1,
                                "example": 1,
                                "nullable": true
                              },
                              "n": {
                                "description": "How many chat completion choices to generate for each input message.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 128,
                                "default": 1,
                                "example": 1,
                                "nullable": true
                              },
                              "stream": {
                                "description": "If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a `data: [DONE]` message.",
                                "type": "boolean",
                                "nullable": true,
                                "default": false
                              },
                              "stop": {
                                "description": "Up to 4 sequences where the API will stop generating further tokens.",
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "nullable": false
                                    },
                                    "minItems": 1,
                                    "maxItems": 4,
                                    "description": "Array minimum size of 1 and maximum of 4"
                                  }
                                ],
                                "default": null
                              },
                              "max_tokens": {
                                "description": "The maximum number of tokens allowed for the generated answer. By default, the number of tokens the model can return will be (4096 - prompt tokens).",
                                "type": "integer",
                                "default": "inf"
                              },
                              "presence_penalty": {
                                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
                                "type": "number",
                                "default": 0,
                                "minimum": -2,
                                "maximum": 2
                              },
                              "frequency_penalty": {
                                "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
                                "type": "number",
                                "default": 0,
                                "minimum": -2,
                                "maximum": 2
                              },
                              "logit_bias": {
                                "description": "Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.",
                                "type": "object",
                                "nullable": true
                              },
                              "user": {
                                "description": "A unique identifier representing your end-user, which can help Azure OpenAI to monitor and detect abuse.",
                                "type": "string",
                                "example": "user-1234",
                                "nullable": false
                              }
                            },
                            "required": [
                              "messages"
                            ]
                          },
                          "example": {
                            "model": "gpt-35-turbo",
                            "messages": [
                              {
                                "role": "user",
                                "content": "Hello!"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "responses": {
                      "200": {
                        "description": "OK",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "object": {
                                  "type": "string"
                                },
                                "created": {
                                  "type": "integer",
                                  "format": "unixtime"
                                },
                                "model": {
                                  "type": "string"
                                },
                                "choices": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "index": {
                                        "type": "integer"
                                      },
                                      "message": {
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "type": "string",
                                            "enum": [
                                              "system",
                                              "user",
                                              "assistant"
                                            ],
                                            "description": "The role of the author of this message."
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "The contents of the message"
                                          }
                                        },
                                        "required": [
                                          "role",
                                          "content"
                                        ]
                                      },
                                      "finish_reason": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "usage": {
                                  "type": "object",
                                  "properties": {
                                    "prompt_tokens": {
                                      "type": "integer"
                                    },
                                    "completion_tokens": {
                                      "type": "integer"
                                    },
                                    "total_tokens": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "prompt_tokens",
                                    "completion_tokens",
                                    "total_tokens"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "created",
                                "model",
                                "choices"
                              ]
                            },
                            "example": {
                              "id": "chatcmpl-123",
                              "object": "chat.completion",
                              "created": 1677652288,
                              "choices": [
                                {
                                  "index": 0,
                                  "message": {
                                    "role": "assistant",
                                    "content": "\n\nHello there, how may I assist you today?"
                                  },
                                  "finish_reason": "stop"
                                }
                              ],
                              "usage": {
                                "prompt_tokens": 9,
                                "completion_tokens": 12,
                                "total_tokens": 21
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "components": {
                "schemas": {
                  "errorResponse": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "param": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "securitySchemes": {
                  "bearer": {
                    "type": "oauth2",
                    "flows": {
                      "implicit": {
                        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
                        "scopes": {}
                      }
                    },
                    "x-tokenInfoFunc": "api.middleware.auth.bearer_auth",
                    "x-scopeValidateFunc": "api.middleware.auth.validate_scopes"
                  },
                  "apiKey": {
                    "type": "apiKey",
                    "name": "api-key",
                    "in": "header"
                  }
                }
              }
            },
            "$fxv#1": "<policies>\r\n    <inbound>\r\n        <base/>\r\n        <set-backend-service backend-id=\"openai-backend\" />\r\n        <set-header name=\"api-key\" exists-action=\"override\">\r\n            <value>{{openai-primary-key}}</value>\r\n        </set-header>\r\n    </inbound>\r\n    <backend>\r\n        <base/>\r\n    </backend>\r\n    <outbound>\r\n        <base/>\r\n    </outbound>\r\n    <on-error>\r\n        <base/>\r\n    </on-error>\r\n</policies>",
            "openAINamedValue": "openai-primary-key",
            "openAiApiBackend": "openai-backend"
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2023-03-01-preview",
              "name": "[parameters('apimName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('apimSku')]",
                "capacity": "[parameters('apimCapacity')]"
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "publisherEmail": "[parameters('apimPublisherEmail')]",
                "publisherName": "[parameters('apimPublisherName')]",
                "virtualNetworkType": "[parameters('apimVNetMode')]",
                "virtualNetworkConfiguration": {
                  "subnetResourceId": "[parameters('apimSubentResourceId')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-07-01",
              "name": "nsg-apim-oai-demo",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowManagementEndpointInBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "ApiManagement",
                      "destinationPortRange": "3443",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', parameters('apimName'), 'azure-openai-service-api')]",
              "properties": {
                "path": "openai",
                "apiRevision": "1",
                "displayName": "Azure OpenAI Service API",
                "subscriptionRequired": false,
                "format": "openapi+json",
                "value": "[variables('$fxv#0')]",
                "protocols": [
                  "https"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/backends",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', parameters('apimName'), variables('openAiApiBackend'))]",
              "properties": {
                "description": "[variables('openAiApiBackend')]",
                "url": "[parameters('openAiEndpoint')]",
                "protocol": "http",
                "tls": {
                  "validateCertificateChain": true,
                  "validateCertificateName": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/namedValues",
              "apiVersion": "2022-08-01",
              "name": "[format('{0}/{1}', parameters('apimName'), variables('openAINamedValue'))]",
              "properties": {
                "displayName": "[variables('openAINamedValue')]",
                "secret": true,
                "keyVault": {
                  "secretIdentifier": "[format('{0}secrets/{1}', parameters('keyVaultUri'), parameters('openaiKeyVaultSecretName'))]",
                  "identityClientId": "[parameters('managedIdentityClientId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/policies",
              "apiVersion": "2022-08-01",
              "name": "[format('{0}/{1}/{2}', parameters('apimName'), 'azure-openai-service-api', 'policy')]",
              "properties": {
                "value": "[variables('$fxv#1')]",
                "format": "rawxml"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'azure-openai-service-api')]",
                "[resourceId('Microsoft.ApiManagement/service/namedValues', parameters('apimName'), variables('openAINamedValue'))]",
                "[resourceId('Microsoft.ApiManagement/service/backends', parameters('apimName'), variables('openAiApiBackend'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/loggers",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', parameters('apimName'), 'appInsightsLogger')]",
              "properties": {
                "loggerType": "applicationInsights",
                "resourceId": "[parameters('applicationInsightsId')]",
                "credentials": {
                  "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
                },
                "isBuffered": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/diagnostics",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', parameters('apimName'), 'applicationinsights')]",
              "properties": {
                "alwaysLog": "allErrors",
                "httpCorrelationProtocol": "W3C",
                "verbosity": "information",
                "logClientIp": true,
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('apimName'), 'appInsightsLogger')]",
                "sampling": {
                  "samplingType": "fixed",
                  "percentage": 100
                },
                "frontend": {
                  "request": {
                    "headers": [],
                    "body": {
                      "bytes": 8192
                    }
                  },
                  "response": {
                    "headers": [],
                    "body": {
                      "bytes": 8192
                    }
                  }
                },
                "backend": {
                  "request": {
                    "headers": [],
                    "body": {
                      "bytes": 8192
                    }
                  },
                  "response": {
                    "headers": [],
                    "body": {
                      "bytes": 8192
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('apimName'), 'appInsightsLogger')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('apimPrivateDnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('apimPrivateDnsZoneName'), format('{0}-link', parameters('apimPrivateDnsZoneName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('apimPrivateDnsZoneName'))]"
              ]
            },
            {
              "condition": true,
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('apimPrivateDnsZoneName'), format('{0}.portal', parameters('apimName')))]",
              "properties": {
                "ttl": 36000,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName')), '2023-03-01-preview').privateIPAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('apimPrivateDnsZoneName'))]"
              ]
            },
            {
              "condition": true,
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('apimPrivateDnsZoneName'), format('{0}.developer', parameters('apimName')))]",
              "properties": {
                "ttl": 36000,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName')), '2023-03-01-preview').privateIPAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('apimPrivateDnsZoneName'))]"
              ]
            },
            {
              "condition": true,
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('apimPrivateDnsZoneName'), format('{0}.management', parameters('apimName')))]",
              "properties": {
                "ttl": 36000,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName')), '2023-03-01-preview').privateIPAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('apimPrivateDnsZoneName'))]"
              ]
            },
            {
              "condition": true,
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('apimPrivateDnsZoneName'), format('{0}.scm', parameters('apimName')))]",
              "properties": {
                "ttl": 36000,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName')), '2023-03-01-preview').privateIPAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('apimPrivateDnsZoneName'))]"
              ]
            },
            {
              "condition": true,
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('apimPrivateDnsZoneName'), parameters('apimName'))]",
              "properties": {
                "ttl": 36000,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName')), '2023-03-01-preview').privateIPAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('apimPrivateDnsZoneName'))]"
              ]
            }
          ],
          "outputs": {
            "apiManagementId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyVault')]",
        "[resourceId('Microsoft.Resources/deployments', 'loggingResources')]",
        "[resourceId('Microsoft.Resources/deployments', 'oaiAccount')]",
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "virtualMachine",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "OSVersion": {
            "value": "[parameters('OSVersion')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('vmAdminPassword')]"
          },
          "vmAdminUsername": {
            "value": "[parameters('vmAdminUsername')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "virtualMachinesSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.virtualMachinesSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "16466323143118364848"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            },
            "vmSize": {
              "type": "string"
            },
            "vmAdminUsername": {
              "type": "string"
            },
            "vmAdminPassword": {
              "type": "securestring"
            },
            "OSVersion": {
              "type": "string"
            },
            "virtualMachinesSubnetId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('virtualMachinesSubnetId')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('vmAdminUsername')]",
                  "adminPassword": "[parameters('vmAdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "microsoftwindowsdesktop",
                    "offer": "windows-11",
                    "sku": "[parameters('OSVersion')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "StandardSSD_LRS"
                    }
                  },
                  "dataDisks": []
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": false
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "bastionHost",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "bastionHostName": {
            "value": "[parameters('bastionHostName')]"
          },
          "bastionSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.bastionSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "8181221157024429151"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "bastionHostName": {
              "type": "string"
            },
            "bastionSubnetId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-07-01",
              "name": "[format('pip-{0}', parameters('bastionHostName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "publicIPAllocationMethod": "Static"
              },
              "sku": {
                "name": "Standard"
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2022-07-01",
              "name": "[parameters('bastionHostName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "properties": {
                      "subnet": {
                        "id": "[parameters('bastionSubnetId')]"
                      },
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-{0}', parameters('bastionHostName')))]"
                      },
                      "privateIPAllocationMethod": "Dynamic"
                    },
                    "name": "ipconfig1"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('pip-{0}', parameters('bastionHostName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
      ]
    }
  ]
}